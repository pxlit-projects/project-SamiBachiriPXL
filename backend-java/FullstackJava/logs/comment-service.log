2025-01-11 15:57:10 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 27412 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 15:57:10 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 15:57:10 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 15:57:10 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 15:57:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 15:57:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 97 ms. Found 1 JPA repository interface.
2025-01-11 15:57:10 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 15:57:11 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 15:57:11 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 15:57:11 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 15:57:11 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 15:57:11 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 15:57:11 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 15:57:11 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 15:57:11 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1124 ms
2025-01-11 15:57:11 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 15:57:11 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 15:57:11 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 15:57:11 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 15:57:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 15:57:11 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70b1028d
2025-01-11 15:57:11 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 15:57:11 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 15:57:11 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 15:57:12 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 15:57:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 15:57:12 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 15:57:13 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 15:57:13 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 15:57:13 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 15:57:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 15:57:13 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736607433588 with initial instances count: 2
2025-01-11 15:57:13 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736607433591, current=UP, previous=STARTING]
2025-01-11 15:57:13 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 15:57:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 15:57:13 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 15:57:13 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 4.309 seconds (process running for 4.832)
2025-01-11 15:57:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:02:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:02:40 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 16:02:40 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736607760249, current=DOWN, previous=UP]
2025-01-11 16:02:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:02:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:02:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 16:02:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:02:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 16:02:40 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 16:02:43 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 16:02:43 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 16:02:43 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 16:04:07 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 21364 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 16:04:07 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 16:04:07 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 16:04:07 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 16:04:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 16:04:08 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86 ms. Found 1 JPA repository interface.
2025-01-11 16:04:08 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 16:04:08 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 16:04:08 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 16:04:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 16:04:08 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 16:04:08 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 16:04:08 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 16:04:08 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 16:04:08 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 942 ms
2025-01-11 16:04:08 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 16:04:08 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 16:04:09 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 16:04:09 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 16:04:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 16:04:09 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 16:04:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 16:04:09 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 16:04:09 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 16:04:10 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 16:04:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:04:10 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 16:04:10 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 16:04:10 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 16:04:10 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 16:04:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 16:04:10 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736607850938 with initial instances count: 3
2025-01-11 16:04:10 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736607850942, current=UP, previous=STARTING]
2025-01-11 16:04:10 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:04:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 16:04:10 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 16:04:10 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.723 seconds (process running for 4.198)
2025-01-11 16:04:10 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:09:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:14:10 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:16:46 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 16:16:46 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736608606831, current=DOWN, previous=UP]
2025-01-11 16:16:46 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:16:46 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:16:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 16:16:46 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:16:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 16:16:46 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 16:16:49 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 16:16:49 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 16:16:49 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 16:17:29 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 21512 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 16:17:29 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 16:17:29 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 16:17:29 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 16:17:29 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 16:17:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 1 JPA repository interface.
2025-01-11 16:17:30 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 16:17:30 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 16:17:30 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 16:17:30 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 16:17:30 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 16:17:30 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 16:17:30 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 16:17:30 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 16:17:30 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1008 ms
2025-01-11 16:17:30 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 16:17:30 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 16:17:30 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 16:17:30 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 16:17:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 16:17:31 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1317ac2c
2025-01-11 16:17:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 16:17:31 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 16:17:31 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 16:17:31 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 16:17:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:17:32 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 16:17:32 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 16:17:32 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 16:17:32 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 16:17:32 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 16:17:32 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736608652625 with initial instances count: 3
2025-01-11 16:17:32 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736608652629, current=UP, previous=STARTING]
2025-01-11 16:17:32 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:17:32 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 16:17:32 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 16:17:32 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.858 seconds (process running for 4.327)
2025-01-11 16:17:32 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:18:29 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 16:18:29 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736608709384, current=DOWN, previous=UP]
2025-01-11 16:18:29 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:18:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:18:29 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:18:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 16:18:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 16:18:29 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 16:18:32 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 16:18:32 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 16:18:32 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 16:19:52 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 4236 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 16:19:52 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 16:19:52 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 16:19:52 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 16:19:53 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 16:19:53 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 1 JPA repository interface.
2025-01-11 16:19:53 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 16:19:53 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 16:19:53 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 16:19:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 16:19:53 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 16:19:53 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 16:19:53 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 16:19:53 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 16:19:53 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 985 ms
2025-01-11 16:19:53 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 16:19:53 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 16:19:54 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 16:19:54 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 16:19:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 16:19:54 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8f374de
2025-01-11 16:19:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 16:19:54 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 16:19:54 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 16:19:55 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 16:19:55 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:19:55 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 16:19:55 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 16:19:55 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 16:19:55 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 16:19:55 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 16:19:55 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736608795932 with initial instances count: 3
2025-01-11 16:19:55 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736608795935, current=UP, previous=STARTING]
2025-01-11 16:19:55 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:19:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 16:19:55 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 16:19:55 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.809 seconds (process running for 4.278)
2025-01-11 16:19:55 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:21:49 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 16:21:49 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736608909010, current=DOWN, previous=UP]
2025-01-11 16:21:49 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:21:49 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:21:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:21:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 16:21:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 16:21:49 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 16:21:52 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 16:21:52 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 16:21:52 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 16:26:06 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 29520 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 16:26:06 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 16:26:06 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 16:26:06 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 16:26:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 16:26:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 97 ms. Found 1 JPA repository interface.
2025-01-11 16:26:07 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 16:26:07 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 16:26:07 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 16:26:07 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 16:26:07 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 16:26:07 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 16:26:07 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 16:26:07 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 16:26:07 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 940 ms
2025-01-11 16:26:08 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 16:26:08 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 16:26:08 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 16:26:08 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 16:26:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 16:26:08 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 16:26:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 16:26:08 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 16:26:08 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 16:26:09 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 16:26:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:26:09 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 16:26:09 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 16:26:09 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 16:26:09 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 16:26:09 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 16:26:09 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736609169989 with initial instances count: 3
2025-01-11 16:26:09 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736609169992, current=UP, previous=STARTING]
2025-01-11 16:26:09 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 16:26:09 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:26:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 16:26:10 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 16:26:10 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.695 seconds (process running for 4.142)
2025-01-11 16:26:10 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:29:09 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 16:29:09 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736609349620, current=DOWN, previous=UP]
2025-01-11 16:29:09 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:29:09 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:29:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:29:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 16:29:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 16:29:09 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 16:29:12 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 16:29:12 WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2025-01-11 16:29:12 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 16:29:12 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 16:30:05 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 27364 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 16:30:05 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 16:30:05 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 16:30:05 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 16:30:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 16:30:06 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 1 JPA repository interface.
2025-01-11 16:30:06 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 16:30:06 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 16:30:06 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 16:30:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 16:30:06 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 16:30:06 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 16:30:06 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 16:30:06 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 16:30:06 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 949 ms
2025-01-11 16:30:06 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 16:30:06 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 16:30:06 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 16:30:06 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 16:30:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 16:30:07 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@451a4187
2025-01-11 16:30:07 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 16:30:07 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 16:30:07 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 16:30:07 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 16:30:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 16:30:07 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 16:30:08 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 16:30:08 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 16:30:08 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 16:30:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 16:30:08 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736609408607 with initial instances count: 3
2025-01-11 16:30:08 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736609408610, current=UP, previous=STARTING]
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 16:30:08 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 16:30:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 16:30:08 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 16:30:08 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.735 seconds (process running for 4.193)
2025-01-11 16:30:08 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 16:35:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:40:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:45:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:50:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 16:55:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:00:08 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:00:13 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 17:00:13 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736611213537, current=DOWN, previous=UP]
2025-01-11 17:00:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:00:13 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:00:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 17:00:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 17:00:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 17:00:13 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 17:00:16 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 17:00:16 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 17:00:16 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 17:02:01 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 29816 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 17:02:01 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 17:02:01 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 17:02:01 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 17:02:01 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 17:02:01 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95 ms. Found 1 JPA repository interface.
2025-01-11 17:02:02 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 17:02:02 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 17:02:02 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 17:02:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 17:02:02 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 17:02:02 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 17:02:02 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 17:02:02 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 17:02:02 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 934 ms
2025-01-11 17:02:02 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 17:02:02 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 17:02:02 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 17:02:02 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 17:02:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 17:02:02 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 17:02:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 17:02:02 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 17:02:02 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 17:02:03 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 17:02:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:02:03 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 17:02:04 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 17:02:04 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 17:02:04 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 17:02:04 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 17:02:04 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736611324377 with initial instances count: 3
2025-01-11 17:02:04 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736611324380, current=UP, previous=STARTING]
2025-01-11 17:02:04 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:02:04 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 17:02:04 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 17:02:04 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.69 seconds (process running for 4.134)
2025-01-11 17:02:04 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 17:06:31 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 17:06:31 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736611591724, current=DOWN, previous=UP]
2025-01-11 17:06:31 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:06:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:06:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 17:06:31 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 17:06:31 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 17:06:31 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 17:06:31 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 17:06:31 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 17:06:31 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 17:08:44 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 25148 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 17:08:44 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 17:08:44 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 17:08:44 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 17:08:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 17:08:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 1 JPA repository interface.
2025-01-11 17:08:45 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 17:08:45 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 17:08:45 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 17:08:45 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 17:08:45 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 17:08:45 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 17:08:45 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 17:08:45 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 17:08:45 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 986 ms
2025-01-11 17:08:45 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 17:08:45 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 17:08:45 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 17:08:45 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 17:08:45 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 17:08:46 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@416c1b0
2025-01-11 17:08:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 17:08:46 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 17:08:46 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 17:08:46 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 17:08:46 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:08:47 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 17:08:47 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 17:08:47 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 17:08:47 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 17:08:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 17:08:47 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736611727616 with initial instances count: 3
2025-01-11 17:08:47 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736611727619, current=UP, previous=STARTING]
2025-01-11 17:08:47 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:08:47 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 17:08:47 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 17:08:47 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.842 seconds (process running for 4.335)
2025-01-11 17:08:47 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 17:13:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:18:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:23:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:28:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:33:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:38:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:43:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:48:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:53:47 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:54:18 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 17:54:18 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736614458470, current=DOWN, previous=UP]
2025-01-11 17:54:18 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:54:18 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:54:18 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 17:54:18 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 17:54:18 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 17:54:18 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 17:54:18 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 17:54:18 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 17:54:18 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 17:56:10 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 8872 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 17:56:10 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 17:56:10 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 17:56:10 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 17:56:11 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 17:56:11 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 85 ms. Found 1 JPA repository interface.
2025-01-11 17:56:11 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 17:56:11 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 17:56:11 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 17:56:11 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 17:56:11 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 17:56:11 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 17:56:11 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 17:56:11 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 17:56:11 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 945 ms
2025-01-11 17:56:11 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 17:56:11 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 17:56:11 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 17:56:12 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 17:56:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 17:56:12 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 17:56:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 17:56:12 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 17:56:12 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 17:56:12 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 17:56:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:56:13 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 17:56:13 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 17:56:13 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 17:56:13 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 17:56:13 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 17:56:13 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736614573742 with initial instances count: 2
2025-01-11 17:56:13 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736614573745, current=UP, previous=STARTING]
2025-01-11 17:56:13 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:56:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 17:56:13 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 17:56:13 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.724 seconds (process running for 4.175)
2025-01-11 17:56:13 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 17:57:53 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 17:57:53 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736614673724, current=DOWN, previous=UP]
2025-01-11 17:57:53 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:57:53 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:57:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 17:57:53 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 17:57:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 17:57:53 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 17:57:56 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 17:57:56 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 17:57:56 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 17:59:31 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 16216 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 17:59:31 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 17:59:31 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 17:59:31 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 17:59:31 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 17:59:31 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 1 JPA repository interface.
2025-01-11 17:59:31 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 17:59:31 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 17:59:31 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 17:59:32 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 17:59:32 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 17:59:32 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 17:59:32 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 17:59:32 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 17:59:32 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 940 ms
2025-01-11 17:59:32 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 17:59:32 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 17:59:32 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 17:59:32 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 17:59:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 17:59:32 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8f374de
2025-01-11 17:59:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 17:59:32 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 17:59:32 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 17:59:33 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 17:59:33 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 17:59:33 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 17:59:34 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 17:59:34 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 17:59:34 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 17:59:34 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 17:59:34 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736614774270 with initial instances count: 3
2025-01-11 17:59:34 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736614774273, current=UP, previous=STARTING]
2025-01-11 17:59:34 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 17:59:34 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 17:59:34 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 17:59:34 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.748 seconds (process running for 4.211)
2025-01-11 17:59:34 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:04:34 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:09:34 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:14:34 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:19:34 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:21:54 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 18:21:54 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736616114563, current=DOWN, previous=UP]
2025-01-11 18:21:54 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:21:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:21:54 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:21:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 18:21:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 18:21:54 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 18:21:57 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 18:21:57 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 18:21:57 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 18:23:03 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 27756 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 18:23:03 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 18:23:03 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 18:23:03 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 18:23:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 18:23:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 1 JPA repository interface.
2025-01-11 18:23:04 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 18:23:04 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 18:23:04 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 18:23:04 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 18:23:04 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 18:23:04 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 18:23:04 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 18:23:04 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 18:23:04 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 967 ms
2025-01-11 18:23:04 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 18:23:04 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 18:23:04 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 18:23:05 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 18:23:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 18:23:05 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 18:23:05 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 18:23:05 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 18:23:05 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 18:23:05 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 18:23:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:23:06 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 18:23:06 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 18:23:06 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 18:23:06 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 18:23:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 18:23:06 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736616186796 with initial instances count: 3
2025-01-11 18:23:06 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736616186799, current=UP, previous=STARTING]
2025-01-11 18:23:06 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:23:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 18:23:06 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 18:23:06 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.818 seconds (process running for 4.355)
2025-01-11 18:23:06 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:28:06 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:28:49 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 18:28:49 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736616529357, current=DOWN, previous=UP]
2025-01-11 18:28:49 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:28:49 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:28:49 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:28:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 18:28:49 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 18:28:49 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 18:28:52 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 18:28:52 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/} exception=I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 37 more

2025-01-11 18:28:52 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:28:52 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/}, exception=I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2025-01-11 18:28:52 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:28:52 ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-01-11 18:28:52 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 18:33:41 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 29944 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 18:33:41 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 18:33:41 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 18:33:41 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 18:33:42 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 18:33:42 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 1 JPA repository interface.
2025-01-11 18:33:42 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 18:33:42 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 18:33:42 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 18:33:42 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 18:33:42 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 18:33:42 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 18:33:42 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 18:33:42 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 18:33:42 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 943 ms
2025-01-11 18:33:42 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 18:33:42 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 18:33:43 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 18:33:43 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 18:33:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 18:33:43 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 18:33:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 18:33:43 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 18:33:43 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 18:33:44 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 18:33:44 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:33:44 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 18:33:44 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 18:33:44 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 18:33:44 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 18:33:44 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 18:33:44 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736616824925 with initial instances count: 2
2025-01-11 18:33:44 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736616824929, current=UP, previous=STARTING]
2025-01-11 18:33:44 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:33:44 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 18:33:44 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 18:33:44 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.734 seconds (process running for 4.189)
2025-01-11 18:33:44 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:34:43 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 18:34:43 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736616883148, current=DOWN, previous=UP]
2025-01-11 18:34:43 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:34:43 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:34:43 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/} exception=I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2025-01-11 18:34:43 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:34:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 18:34:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 18:34:43 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 18:34:43 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/}, exception=I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-01-11 18:34:43 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:34:43 WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-01-11 18:34:43 WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-01-11 18:34:43 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 18:34:43 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/}, exception=I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2025-01-11 18:34:43 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:34:43 ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-01-11 18:34:43 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 18:42:37 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 24192 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 18:42:37 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 18:42:37 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 18:42:37 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 18:42:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 18:42:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 94 ms. Found 1 JPA repository interface.
2025-01-11 18:42:38 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 18:42:38 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 18:42:38 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 18:42:38 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 18:42:38 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 18:42:38 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 18:42:38 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 18:42:38 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 18:42:38 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 956 ms
2025-01-11 18:42:38 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 18:42:38 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 18:42:38 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 18:42:38 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 18:42:38 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 18:42:38 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 18:42:38 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 18:42:38 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 18:42:38 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 18:42:39 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 18:42:39 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:42:39 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 18:42:40 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 18:42:40 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 18:42:40 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 18:42:40 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 18:42:40 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736617360386 with initial instances count: 2
2025-01-11 18:42:40 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736617360390, current=UP, previous=STARTING]
2025-01-11 18:42:40 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:42:40 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 18:42:40 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 18:42:40 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.79 seconds (process running for 4.287)
2025-01-11 18:42:40 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:45:30 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 18:45:30 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736617530357, current=DOWN, previous=UP]
2025-01-11 18:45:30 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:45:30 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/} exception=I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 21 more

2025-01-11 18:45:30 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:45:30 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:45:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 18:45:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 18:45:30 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 18:45:30 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/}, exception=I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-01-11 18:45:30 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on POST request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:45:30 WARN  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-01-11 18:45:30 WARN  c.n.discovery.InstanceInfoReplicator - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)
	at com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-01-11 18:45:30 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 18:45:30 INFO  c.n.d.s.t.d.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8061/eureka/}, exception=I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more

2025-01-11 18:45:30 WARN  c.n.d.s.t.d.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://localhost:8061/eureka/apps/COMMENT-SERVICE/host.docker.internal:comment-service:8085": Connect to http://localhost:8061 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-11 18:45:30 ERROR c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-01-11 18:45:30 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 18:48:52 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 25912 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 18:48:52 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 18:48:52 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 18:48:52 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 18:48:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 18:48:53 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 1 JPA repository interface.
2025-01-11 18:48:53 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 18:48:53 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 18:48:53 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 18:48:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 18:48:53 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 18:48:53 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 18:48:53 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 18:48:53 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 18:48:53 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 976 ms
2025-01-11 18:48:53 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 18:48:53 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 18:48:53 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 18:48:53 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 18:48:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 18:48:54 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@426913c4
2025-01-11 18:48:54 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 18:48:54 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 18:48:54 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 18:48:54 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 18:48:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:48:54 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 18:48:55 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 18:48:55 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 18:48:55 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 18:48:55 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 18:48:55 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736617735602 with initial instances count: 1
2025-01-11 18:48:55 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736617735605, current=UP, previous=STARTING]
2025-01-11 18:48:55 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:48:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 18:48:55 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 18:48:55 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.854 seconds (process running for 4.35)
2025-01-11 18:48:55 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:53:24 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 18:53:24 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736618004175, current=DOWN, previous=UP]
2025-01-11 18:53:24 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:53:24 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:53:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:53:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 18:53:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 18:53:24 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 18:53:27 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 18:53:27 WARN  c.n.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2025-01-11 18:53:27 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 18:53:27 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 18:54:54 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 19028 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 18:54:54 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 18:54:54 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 18:54:54 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 18:54:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 18:54:54 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 1 JPA repository interface.
2025-01-11 18:54:54 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 18:54:55 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 18:54:55 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 18:54:55 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 18:54:55 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 18:54:55 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 18:54:55 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 18:54:55 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 18:54:55 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1027 ms
2025-01-11 18:54:55 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 18:54:55 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 18:54:55 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 18:54:55 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 18:54:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 18:54:55 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1bba9862
2025-01-11 18:54:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 18:54:56 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 18:54:56 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 18:54:56 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 18:54:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 18:54:56 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 18:54:57 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 18:54:57 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 18:54:57 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 18:54:57 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 18:54:57 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736618097488 with initial instances count: 2
2025-01-11 18:54:57 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736618097491, current=UP, previous=STARTING]
2025-01-11 18:54:57 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 18:54:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 18:54:57 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 18:54:57 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 4.111 seconds (process running for 4.582)
2025-01-11 18:54:57 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 18:59:57 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 19:01:09 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 19:01:09 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736618469186, current=DOWN, previous=UP]
2025-01-11 19:01:09 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 19:01:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 19:01:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 19:01:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 19:01:09 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 19:01:09 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 19:01:09 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 19:01:09 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 19:01:09 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-11 19:05:01 INFO  b.p.s.CommentServiceApplication - Starting CommentServiceApplication using Java 21.0.1 with PID 19792 (C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava\comment-service\target\classes started by samib in C:\Users\samib\Desktop\School\Fullstack Java\project\project-SamiBachiriPXL\backend-java\FullstackJava)
2025-01-11 19:05:01 INFO  b.p.s.CommentServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-11 19:05:01 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8088/
2025-01-11 19:05:01 INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=comment-service, profiles=[default], label=null, version=null, state=null
2025-01-11 19:05:01 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-11 19:05:01 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 1 JPA repository interface.
2025-01-11 19:05:01 INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=5a96a377-1447-3009-8bf3-5b161d6c14de
2025-01-11 19:05:01 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-11 19:05:01 WARN  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-11 19:05:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-11 19:05:02 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-11 19:05:02 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-01-11 19:05:02 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.24]
2025-01-11 19:05:02 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-01-11 19:05:02 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 945 ms
2025-01-11 19:05:02 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-11 19:05:02 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-01-11 19:05:02 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-01-11 19:05:02 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-11 19:05:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-01-11 19:05:02 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1317ac2c
2025-01-11 19:05:02 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-01-11 19:05:02 WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-01-11 19:05:02 WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-01-11 19:05:03 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-01-11 19:05:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 19:05:03 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-11 19:05:03 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-11 19:05:03 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-11 19:05:03 INFO  o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-11 19:05:03 INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Application is null : false
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-01-11 19:05:03 INFO  c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-11 19:05:04 INFO  c.netflix.discovery.DiscoveryClient - The response status is 200
2025-01-11 19:05:04 INFO  c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-11 19:05:04 INFO  c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-11 19:05:04 INFO  c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1736618704130 with initial instances count: 3
2025-01-11 19:05:04 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application COMMENT-SERVICE with eureka with status UP
2025-01-11 19:05:04 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736618704134, current=UP, previous=STARTING]
2025-01-11 19:05:04 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-11 19:05:04 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 19:05:04 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-11 19:05:04 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8085
2025-01-11 19:05:04 INFO  b.p.s.CommentServiceApplication - Started CommentServiceApplication in 3.734 seconds (process running for 4.2)
2025-01-11 19:05:04 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 19:06:24 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application COMMENT-SERVICE with eureka with status DOWN
2025-01-11 19:06:24 INFO  c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1736618784265, current=DOWN, previous=UP]
2025-01-11 19:06:24 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085: registering service...
2025-01-11 19:06:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-01-11 19:06:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-01-11 19:06:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-01-11 19:06:24 INFO  c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-11 19:06:24 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - registration status: 204
2025-01-11 19:06:24 INFO  c.netflix.discovery.DiscoveryClient - Unregistering ...
2025-01-11 19:06:24 INFO  c.netflix.discovery.DiscoveryClient - DiscoveryClient_COMMENT-SERVICE/host.docker.internal:comment-service:8085 - deregister  status: 200
2025-01-11 19:06:24 INFO  c.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
